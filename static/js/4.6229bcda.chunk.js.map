{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/AddMessageForm.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","maxLength50","maxLengthCreator","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","DialogItem","path","id","className","s","dialog","active","to","Message","message","Dialogs","dialogsPage","dialogsElements","dialogsData","map","d","key","messagesElements","messagesData","m","newMessageBody","dialogs","dialogsItems","messages","values","sendMessage","compose","connect","dispatch","sendMessageCreater","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,qICG1IC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,iCCAjBE,EAAcC,YAAiB,IAetBC,cAAU,CAACC,KAAM,wBAAjBD,EAbQ,SAACE,GACpB,OACI,0BAAMC,SAAUD,EAAME,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAK,iBAAiBC,YAAY,qBAAqBC,SAAU,CAACC,IAAUb,MAE5G,6BACI,6C,0BCADc,EAVI,SAACV,GAChB,IAAIW,EAAO,YAAcX,EAAMY,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAIN,GAAOX,EAAMM,QCAvBY,EANC,SAAClB,GACb,OACI,yBAAKa,UAAWC,IAAEK,SAAUnB,EAAMmB,UC4B3BC,EA3BC,SAACpB,GAEb,IAAIP,EAAQO,EAAMqB,YAEdC,EAAkB7B,EAAM8B,YAAYC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAMoB,IAAKD,EAAEb,GAAIA,GAAIa,EAAEb,QAEzFe,EAAmBlC,EAAMmC,aAAaJ,KAAK,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASV,QAASU,EAAEV,QAASO,IAAKG,EAAEjB,QACnEnB,EAAMqC,eAM3B,OACI,yBAAKjB,UAAWC,IAAEiB,SACd,yBAAKlB,UAAWC,IAAEkB,cACbV,GAGL,yBAAKT,UAAWC,IAAEmB,UACd,6BAAMN,GACN,kBAAC,EAAD,CAAgB1B,SAZR,SAACiC,GACjBlC,EAAMmC,YAAYD,EAAOJ,sBCGlBM,sBACXC,aAdkB,SAAC5C,GACnB,MAAO,CACH4B,YAAa5B,EAAM4B,gBAGF,SAACiB,GACtB,MAAO,CACHH,YAAa,SAACL,GACVQ,EAASC,YAAmBT,ULNR,SAACU,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAK1C,MAAMN,OAET,kBAAC8C,EAAcE,KAAK1C,OAFI,kBAAC,IAAD,CAAUiB,GAAI,eAHV,GACX0B,IAAMH,WAUtC,OAFqCH,YAAQ7C,EAAR6C,CAAoCI,KKE9DL,CAGbhB","file":"static/js/4.6229bcda.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Udew\",\"dialogsItems\":\"Dialogs_dialogsItems__1OoGS\",\"active\":\"Dialogs_active__2qE36\",\"messages\":\"Dialogs_messages__1bqlK\"};","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {Textarea} from './../common/FormsControls/FormsControls';\r\nimport {required, maxLengthCreator} from './../../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newMessageBody' placeholder='Enter your message' validate={[required, maxLength50]} />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'}) (AddMessageForm);","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) =>{\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport AddMessageForm from './AddMessageForm';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map( d => <DialogItem name={d.name} key={d.id} id={d.id} /> );\r\n\r\n    let messagesElements = state.messagesData.map( m => <Message message={m.message} key={m.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n    \r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from '../../../../../AppData/Local/Microsoft/TypeScript/3.6/node_modules/redux';\r\nimport { sendMessageCreater } from '../redux/dialogsPage-reducer';\r\nimport { withAuthRedirect } from './../../hoc/withAuthRedirect';\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreater(newMessageBody))\r\n        }\r\n    }    \r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}