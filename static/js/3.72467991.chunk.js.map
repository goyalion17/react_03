{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts.jsx","components/Profile/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","alt","message","likesCount","MyPosts","React","memo","postsElements","posts","reverse","map","p","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreater","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","Profile","content","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.72467991.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__31Dph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__T_gYs\",\"posts\":\"MyPosts_posts__tsFeU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2CtqI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__29Vll\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://klike.net/uploads/posts/2019-03/1551511862_28.jpg\" alt='userAvatar' />\r\n            { props.message }\r\n            <div>\r\n                <span>{ props.likesCount } ‚ù§</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from './../../utils/validators/validators';\r\nimport { Textarea } from './../common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './MyPosts/Post/Post';\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let postsElements =\r\n    [...props.posts]\r\n    .reverse()\r\n    .map ( p => <Post message={p.message} likesCount={p.likesCount} /> )\r\n\r\n  //let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n    return (\r\n    <div className={s.postsBlock}>\r\n      <div>\r\n        <h3>My posts</h3>\r\n        <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      </div>\r\n      <div className={s.posts}>\r\n          {postsElements}      \r\n      </div>\r\n    </div>\r\n    )\r\n});\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name='newPostText' component={Textarea} validate={[required, maxLength10]} placeholder={'Post message'} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPostActionCreater } from '../redux/profilePage-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText      \r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreater(newPostText))\r\n    }  \r\n  }    \r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ activateEditMode}>{props.status || '----'}</span>\r\n                </div>\r\n            }\r\n    \r\n            { editMode &&\r\n                <div>                    \r\n                    <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status} />\r\n                </div> \r\n            }               \r\n        </div>\r\n        )\r\n} \r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from './../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n    <div> \r\n        <div className={s.descriptionBlock}>\r\n            <img src={profile.photos.large} />\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {    \r\n    return (\r\n    <div className={s.content}>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />       \r\n        <MyPostsContainer />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from '../../../../../AppData/Local/Microsoft/TypeScript/3.6/node_modules/redux';\r\nimport { getStatus, getUserProfile, updateStatus } from '../redux/profilePage-reducer';\r\nimport Profile from './Profile';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n            this.props.getStatus(userId);     \r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}