{"version":3,"sources":["components/Nav/Nav.module.css","components/redux/dialogsPage-reducer.js","assets/images/preloader.gif","assets/images/user.png","components/Users/Users.module.css","api/api.js","components/common/FormsControls/FormsControls.js","serviceWorker.js","components/redux/auth-reducer.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Nav/Nav.jsx","components/redux/app-reducer.js","components/redux/sidebar-reducer.js","utils/validators/object-helpers.js","components/redux/users-reducer.js","components/redux/redux-store.js","components/redux/users-selectors.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","hoc/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","components/redux/profilePage-reducer.js"],"names":["module","exports","initialState","dialogsData","id","name","messagesData","message","sendMessageCreater","newMessageBody","type","dialogsReducer","state","action","body","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","pageNumber","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","Input","createField","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","SET_USER_DATA","isAuth","setAuthUserData","payload","getAuthUserData","dispatch","a","async","resultCode","authReducer","Header","s","header","src","alt","loginBlock","onClick","to","HeaderContainer","this","React","Component","connect","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","formSummaryError","messages","length","stopSubmit","_error","formData","Nav","nav","item","activeClassName","activeLink","active","initialized","appReducer","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","page","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","count","filter","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","_store_","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","Paginator","totalItemCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","p","cn","selectedPage","key","e","User","user","photos","small","userPhoto","photo","disabled","some","Users","UsersContainer","requestUsers","Preloader","bind","totalCount","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","preloader","style","width","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreater","newPostText","setSatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.e9aa72bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__1d1nY\",\"item\":\"Nav_item__2ITcH\",\"activeLink\":\"Nav_activeLink__-CoQ-\"};","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {    \r\n    dialogsData: [\r\n        {id: 1, name: 'Ирина'},\r\n        {id: 2, name: 'Ваня'},\r\n        {id: 3, name: 'Люда'},\r\n        {id: 4, name: 'Максим'},\r\n        {id: 5, name: 'Олег'}\r\n    ],\r\n\r\n    messagesData: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Whats up?'},\r\n        {id: 4, message: 'Hey'},\r\n        {id: 5, message: 'yo'}\r\n    ]\r\n}\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messagesData: [ ...state.messagesData, {id: 6, message: body}]\r\n            };\r\n        }    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreater = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.0836a709.gif\";","module.exports = __webpack_public_path__ + \"static/media/user.4d3d5236.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Users_photo__3d_44\",\"selectedPage\":\"Users_selectedPage__H1dTZ\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"ca29b60a-13f3-46dd-b81c-6d2e0d02ab80\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 1, pageNumber) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}&${pageNumber}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId){\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId){\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport styles from './FormsControls.module.css';\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return(\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, children, ...restProps} = props;\r\n    return <FormControl {...props} ><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, children, ...restProps} = props;\r\n    return <FormControl {...props} ><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => {\r\n    return (\r\n        <div>\r\n            <Field\r\n                placeholder={placeholder}\r\n                name={name}\r\n                validate={validators}\r\n                component={component}\r\n                {...props}\r\n            />{text}\r\n        </div>\r\n    )\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { authAPI } from './../../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'samurai-network/aut/SET_USER_DATA';\r\n\r\nlet initialState = {    \r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: {userId, email, login, isAuth} });\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {    \r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n    <header className={s.header}>\r\n        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTpTbH4W80IM8DSRP0knztdd8uqU8f9dNvdU_5S53NBi59nCWoz&s\" alt='logo' />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n            ? <div>{props.login} \r\n                <a onClick={props.logout}> &raquo;\r\n                </a>\r\n            </div>\r\n            : <NavLink to='/login'>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from './../redux/auth-reducer';\r\nimport Header from './Header';\r\n\r\nclass HeaderContainer extends React.Component {    \r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToPrors = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToPrors, {logout}) (HeaderContainer);","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required } from './../../utils/validators/validators';\r\nimport { Input } from './../common/FormsControls/FormsControls';\r\nimport {connect} from 'react-redux';\r\nimport {login} from './../redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport styles from './../common/FormsControls/FormsControls.module.css';\r\nimport { createField } from '../common/FormsControls/FormsControls';\r\n\r\n//компонента - это функция, которая принимает props и возвращает jsx\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\r\n\r\n        { error && <div className={styles.formSummaryError}>{error}</div> }\r\n\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = ({login, isAuth}) => {\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'./profile'} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login, }) (Login);","import React from 'react';\r\nimport s from './Nav.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n    return (\r\n    <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import { getAuthUserData } from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {    \r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {    \r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all ([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if(u[objPropName] === itemId){\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import { usersAPI } from './../../api/api';\r\nimport {updateObjectInArray} from './../../utils/validators/object-helpers';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {    \r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    page: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n                return {\r\n                    ...state,\r\n                    users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n                }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, page: action.page }\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                ? [...state.followingInProgress, action.userId]\r\n                : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (page) => ({ type: SET_CURRENT_PAGE, page })\r\nexport const setTotalUsersCount = (totalCount) => ({ type: SET_USERS_TOTAL_COUNT, count: totalCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {combineReducers, createStore, applyMiddleware, compose}  from 'redux';\r\nimport profileReducer from './profilePage-reducer';\r\nimport dialogsReducer from './dialogsPage-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer} from 'redux-form';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow._store_ = store;\r\n\r\nexport default store;","import {createSelector} from 'reselect';\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React, {useState} from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from 'classnames';\r\n\r\nlet Paginator = ({totalItemCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i=1; i <= pagesCount; i++) {\r\n            pages.push(i);\r\n        }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {setPortionNumber(portionNumber - 1)}} >PREV</button>  }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [styles.selectedPage] : currentPage === p\r\n                }, styles.pageNumber) }\r\n                key={p}\r\n                onClick={(e) => {\r\n                    onPageChanged(p);\r\n                }}>{p}</span>\r\n            })}\r\n        \r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>\r\n        }\r\n        </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userPhoto from './../../assets/images/user.png';\r\nimport styles from './Users.module.css';\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={ user.photos.small != null ? user.photos.small : userPhoto } className={styles.photo} />\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                                onClick={ () => {unfollow(user.id); }}>Unfollow</button>\r\n\r\n                        : <button disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                                onClick={ () => {follow(user.id); }}>Follow</button>}        \r\n                </div>\r\n            </span>    \r\n\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n\r\n                <span>\r\n                    <div>{'u.location.country'}</div>\r\n                    <div>{'u.location.city'}</div>\r\n                </span>\r\n            </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from './../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\r\n    return <div>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalItemCount={totalUsersCount} pageSize={pageSize} />\r\n        <div>\r\n        {\r\n            users.map(u => <User user={u}\r\n                followingInProgress={props.followingInProgress}\r\n                key={u.id}\r\n                unfollow={props.unfollow}\r\n                follow={props.follow}\r\n                />\r\n            )          \r\n        }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from '../../../../../AppData/Local/Microsoft/TypeScript/3.6/node_modules/redux';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { follow, requestUsers, setCurrentPage, toggleFollowingProgress, unfollow } from './../redux/users-reducer';\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from './../redux/users-selectors';\r\nimport Users from './Users';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n        { this.props.isFetching ? <Preloader /> : null }\r\n            <Users\r\n            totalUsersCount={this.props.totalUsersCount}\r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            onPageChanged={this.onPageChanged}\r\n            users={this.props.users}\r\n            follow={this.props.follow}\r\n            unfollow={this.props.unfollow}  \r\n            followingInProgress={this.props.followingInProgress}         \r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n    follow, unfollow, setCurrentPage,\r\n    toggleFollowingProgress, requestUsers })    \r\n)(UsersContainer);","import React from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />}>\r\n        <Component {...props} />\r\n    </React.Suspense>\r\n    };\r\n};","import React from 'react';\nimport { connect, Provider } from 'react-redux';\nimport { BrowserRouter, Route, withRouter, HashRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport './App.css';\nimport Preloader from './components/common/Preloader/Preloader';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginPage from './components/Login/Login';\nimport Nav from './components/Nav/Nav';\nimport { initializeApp } from './components/redux/app-reducer';\nimport store from './components/redux/redux-store';\nimport UsersContainer from './components/Users/UsersContainer';\nimport {withSuspense} from './hoc/withSuspense';\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends React.Component {\n  componentDidMount(){\n    this.props.initializeApp();\n}\n\n  render() {\n    if(!this.props.initialized){\n      return <Preloader />\n    }\n    return (    \n        <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Nav />\n          <div className='app-wrapper-content'>\n            <Route path='/dialogs' \n              render={withSuspense(DialogsContainer)}/>\n              <Route path='/profile' \n              render={withSuspense(ProfileContainer)}/>\n            <Route path='/users' render={ () => <UsersContainer /> }/>\n            <Route path='/login' render={ () => <LoginPage /> }/>\n          </div>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = compose (\n  withRouter,\n  connect(mapStateToProps, {initializeApp})) (App);\n\nconst SamuraiJSApp = (props) => { \n    return <HashRouter basename= {process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </HashRouter>\n}\n\nexport default SamuraiJSApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport SamuraiJSApp from './App';\n\n    ReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport preloader from './../../../assets/images/preloader.gif';\r\n\r\nlet Preloader = (props) => {\r\n    return <div ><img src={preloader} style={ {width: '50px'} } /></div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3O2NK\",\"error\":\"FormsControls_error__2LLG7\",\"formSummaryError\":\"FormsControls_formSummaryError__9rpPn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1u0hg\",\"pageNumber\":\"Paginator_pageNumber__kbJyR\",\"selectedPage\":\"Paginator_selectedPage__zOtfN\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Maxlength is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__OPxGo\",\"loginBlock\":\"Header_loginBlock__DAhdV\"};","import { usersAPI, profileAPI } from './../../api/api';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 15},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 20},\r\n        {id: 3, message: 'Hi, how are you?', likesCount: 15},\r\n        {id: 4, message: 'It\\'s my first post', likesCount: 20}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status};\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreater = (newPostText) => ({ type: ADD_POST, newPostText})\r\n\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId})\r\n\r\nexport const setSatus = (status) => ({ type: SET_STATUS, status})\r\n\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setSatus(response.data));    \r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setSatus(status));\r\n    } \r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}